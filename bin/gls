#!/usr/bin/env python
import sys
import colors
from subprocess import check_output, call
from argparse import ArgumentParser
from os.path import splitext


def main():
    options = get_options()

    files = sorted(check_output(['git', 'ls-files']).strip().split('\n'))

    if options.extension:
        ext = options.extension
        if not ext.startswith('.'):
            ext = '.' + ext
        files = filter_by_ext(files, ext)
        if not files:
            print colors.red('no files found')
            sys.exit(1)
        else:
            print_ext_header(ext)
            show_files(files)
    elif options.c:
        file_dict = categorize_files(files)
        for i, ext in enumerate(sorted(file_dict)):
            if i > 0:
                print
            print_ext_header(ext)
            show_files(file_dict[ext])
    else:
        show_files(files)


def print_ext_header(ext):
    if ext:
        print colors.green(colors.bold(ext))
    else:
        print colors.green(colors.bold('no extension'))


def show_files(files):
    call(['ls', '-lahF', '--color=always'] + files)


def categorize_files(files):
    out = {}
    for f in files:
        key = splitext(f)[1]
        if key not in out:
            out[key] = []
        out[key].append(f)
    return out


def filter_by_ext(files, ext):
    return [x for x in files if x.endswith(ext)]


def get_options():
    parser = ArgumentParser()
    parser.add_argument('-c', action='store_true',
                        help='categorize file by extension')
    parser.add_argument('extension', nargs='?')
    return parser.parse_args()


if __name__ == '__main__':
    main()
