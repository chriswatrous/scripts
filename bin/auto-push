#!/usr/bin/env python
from subprocess import check_call, check_output, STDOUT
from time import sleep


def main():
    while True:
        try:
            _update_remote()
        except Exception as e:
            print '{}: {}'.format(type(e).__name__, e)
        sleep(15)


def _update_remote():
    if not _has_local_changes():
        print 'Nothing to commit.'
        return
    if not _commit_message('HEAD') == 'auto-push':
        print 'HEAD commit message is not "auto-push"'
        return
    _add_all()
    _commit_amend()
    _force_push()


def _has_local_changes():
    return bool(_git_output('status', '-s').strip())


def _commit_message(commit):
    return _git_output('log', '--format=%B', '-n', '1', commit).strip()


def _add_all():
    _git('add', '-A', ':/')


def _commit_amend():
    _git('commit', '--amend', '--no-edit', '--date=now')


def _force_push():
    _git('push', '-f')


def _git(*args):
    check_call(['git'] + list(args))


def _git_output(*args):
    return check_output(['git'] + list(args), stderr=STDOUT)


if __name__ == '__main__':
    main()
